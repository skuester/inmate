#!/bin/sh
source "/usr/local/inmate/lib/common.sh"

_find_rule_pwd()
{
	# echo "finding rule pwd $1"
	directory=${1%/}
	basename=$2
	rule_base="_default.$basename.$RULE"
	rule="$directory/$rule_base"
	while :; do
		rule_base="_default."${rule_base#_default.*.}
		rule="$directory/$rule_base"
		[ -e "$rule" -o "$rule" = "$directory/_default.$RULE" ] && break
	done
}

_find_rule()
{
	# echo "find rule $1"
	_dirsplit $file

	rule="$dir/$base.rule"
	[ -e $rule ] && return

	while :; do
		# echo "looking in $dir ..."
		_find_rule_pwd $dir $base
		[ -e $rule ] && return
		[ $dir = $PWD ] && break
		dir=${dir%/*}
	done;

	rule=$INMATE_DEFAULT_RULE
}


_call_rule()
{
	local line1
	set -e
	_find_rule $1

	read line1 <"$rule" || true
	cmd=${line1#"#!/"}
	if [ "$cmd" != "$line1" ]; then
		/$cmd "$rule" $@
	else
		:; . "$rule"
	fi
}

# src is the folder I'm building
src=${1%/} 
# target root is where it's all going.
target_root="$2"
[ -d "$target_root" ] ||  mkdir -p "$target_root"

for file in "$src"/*; do
	# ignore hidden files (beginning with _)
	if [[ ${file#$src/_} = $file ]]; then
		relative_file=${file##$PWD/}
		[ -d $file ] && inmate $relative_file $target_root
		[ -f $file ] && _call_rule $relative_file $target_root
	fi
done

echo "${green}built $src$plain"
